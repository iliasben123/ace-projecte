{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\frontendreactsuivi\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientDashboard() {\n  _s();\n  var _location$state, _location$state2, _location$state2$pati;\n  const location = useLocation();\n  const [healthData, setHealthData] = useState([]);\n  const [patientProfile, setPatientProfile] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.patientProfile) || {});\n  const patientId = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : (_location$state2$pati = _location$state2.patientProfile) === null || _location$state2$pati === void 0 ? void 0 : _location$state2$pati.id) || \"123\"; // Récupérer dynamiquement l'ID\n\n  useEffect(() => {\n    if (!patientId) {\n      console.error(\"Aucun ID patient trouvé !\");\n      return;\n    }\n\n    // Récupérer les données de santé\n    axios.get(`http://localhost:8080/api/health-data/${patientId}`).then(response => {\n      setHealthData(response.data);\n    }).catch(error => {\n      console.error(\"Erreur lors de la récupération des données de santé :\", error);\n    });\n  }, [patientId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.dashboard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nom :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 20\n        }, this), \" \", patientProfile.name || \"Nom indisponible\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 20\n        }, this), \" \", patientProfile.email || \"Email indisponible\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date de naissance :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, this), \" \", patientProfile.birthDate ? new Date(patientProfile.birthDate).toLocaleDateString() : \"Non spécifiée\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xC9tats de sant\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this), healthData.length > 0 ? healthData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date enregistr\\xE9e :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 33\n          }, this), \" \", new Date(data.date_recorded).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 32\n          }, this), \" \", data.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valeur :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 32\n          }, this), \" \", data.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune donn\\xE9e de sant\\xE9 disponible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"eqPIqBbAqWFqhCZYTuBvadozLYA=\", false, function () {\n  return [useLocation];\n});\n_c = PatientDashboard;\nconst styles = {\n  dashboard: {\n    padding: \"20px\",\n    backgroundColor: \"#f9f9f9\"\n  },\n  section: {\n    marginBottom: \"30px\"\n  },\n  card: {\n    backgroundColor: \"#fff\",\n    borderRadius: \"10px\",\n    padding: \"20px\",\n    marginBottom: \"10px\",\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.1)\"\n  }\n};\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","PatientDashboard","_s","_location$state","_location$state2","_location$state2$pati","location","healthData","setHealthData","patientProfile","setPatientProfile","state","patientId","id","console","error","get","then","response","data","catch","style","styles","dashboard","children","card","fileName","_jsxFileName","lineNumber","columnNumber","name","email","birthDate","Date","toLocaleDateString","section","length","map","index","date_recorded","type","value","_c","padding","backgroundColor","marginBottom","borderRadius","boxShadow","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/frontendreactsuivi/src/pages/PatientDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\n\r\nfunction PatientDashboard() {\r\n    const location = useLocation();\r\n    const [healthData, setHealthData] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState(location.state?.patientProfile || {});\r\n\r\n    const patientId = location.state?.patientProfile?.id || \"123\"; // Récupérer dynamiquement l'ID\r\n\r\n    useEffect(() => {\r\n        if (!patientId) {\r\n            console.error(\"Aucun ID patient trouvé !\");\r\n            return;\r\n        }\r\n\r\n        // Récupérer les données de santé\r\n        axios\r\n            .get(`http://localhost:8080/api/health-data/${patientId}`)\r\n            .then((response) => {\r\n                setHealthData(response.data);\r\n            })\r\n            .catch((error) => {\r\n                console.error(\"Erreur lors de la récupération des données de santé :\", error);\r\n            });\r\n    }, [patientId]);\r\n\r\n    return (\r\n        <div style={styles.dashboard}>\r\n            {/* Section Profil */}\r\n            <div style={styles.card}>\r\n                <h2>Profil</h2>\r\n                <p><strong>Nom :</strong> {patientProfile.name || \"Nom indisponible\"}</p>\r\n                <p><strong>Email :</strong> {patientProfile.email || \"Email indisponible\"}</p>\r\n                <p>\r\n                    <strong>Date de naissance :</strong>{\" \"}\r\n                    {patientProfile.birthDate\r\n                        ? new Date(patientProfile.birthDate).toLocaleDateString()\r\n                        : \"Non spécifiée\"}\r\n                </p>\r\n            </div>\r\n\r\n            {/* Section États de santé */}\r\n            <div style={styles.section}>\r\n                <h2>États de santé</h2>\r\n                {healthData.length > 0 ? (\r\n                    healthData.map((data, index) => (\r\n                        <div key={index} style={styles.card}>\r\n                            <p>\r\n                                <strong>Date enregistrée :</strong>{\" \"}\r\n                                {new Date(data.date_recorded).toLocaleDateString()}\r\n                            </p>\r\n                            <p><strong>Type :</strong> {data.type}</p>\r\n                            <p><strong>Valeur :</strong> {data.value}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Aucune donnée de santé disponible.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    dashboard: {\r\n        padding: \"20px\",\r\n        backgroundColor: \"#f9f9f9\",\r\n    },\r\n    section: {\r\n        marginBottom: \"30px\",\r\n    },\r\n    card: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"10px\",\r\n        padding: \"20px\",\r\n        marginBottom: \"10px\",\r\n        boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.1)\",\r\n    },\r\n};\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,WAAW,QAAQ,kBAAkB;AAC9C,OAAOC,KAAK,MAAM,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE1B,SAASC,gBAAgBA,CAAA,EAAG;EAAAC,EAAA;EAAA,IAAAC,eAAA,EAAAC,gBAAA,EAAAC,qBAAA;EACxB,MAAMC,QAAQ,GAAGT,WAAW,CAAC,CAAC;EAC9B,MAAM,CAACU,UAAU,EAAEC,aAAa,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAChD,MAAM,CAACa,cAAc,EAAEC,iBAAiB,CAAC,GAAGd,QAAQ,CAAC,EAAAO,eAAA,GAAAG,QAAQ,CAACK,KAAK,cAAAR,eAAA,uBAAdA,eAAA,CAAgBM,cAAc,KAAI,CAAC,CAAC,CAAC;EAE1F,MAAMG,SAAS,GAAG,EAAAR,gBAAA,GAAAE,QAAQ,CAACK,KAAK,cAAAP,gBAAA,wBAAAC,qBAAA,GAAdD,gBAAA,CAAgBK,cAAc,cAAAJ,qBAAA,uBAA9BA,qBAAA,CAAgCQ,EAAE,KAAI,KAAK,CAAC,CAAC;;EAE/DlB,SAAS,CAAC,MAAM;IACZ,IAAI,CAACiB,SAAS,EAAE;MACZE,OAAO,CAACC,KAAK,CAAC,2BAA2B,CAAC;MAC1C;IACJ;;IAEA;IACAjB,KAAK,CACAkB,GAAG,CAAC,yCAAyCJ,SAAS,EAAE,CAAC,CACzDK,IAAI,CAAEC,QAAQ,IAAK;MAChBV,aAAa,CAACU,QAAQ,CAACC,IAAI,CAAC;IAChC,CAAC,CAAC,CACDC,KAAK,CAAEL,KAAK,IAAK;MACdD,OAAO,CAACC,KAAK,CAAC,uDAAuD,EAAEA,KAAK,CAAC;IACjF,CAAC,CAAC;EACV,CAAC,EAAE,CAACH,SAAS,CAAC,CAAC;EAEf,oBACIZ,OAAA;IAAKqB,KAAK,EAAEC,MAAM,CAACC,SAAU;IAAAC,QAAA,gBAEzBxB,OAAA;MAAKqB,KAAK,EAAEC,MAAM,CAACG,IAAK;MAAAD,QAAA,gBACpBxB,OAAA;QAAAwB,QAAA,EAAI;MAAM;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACf7B,OAAA;QAAAwB,QAAA,gBAAGxB,OAAA;UAAAwB,QAAA,EAAQ;QAAK;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACpB,cAAc,CAACqB,IAAI,IAAI,kBAAkB;MAAA;QAAAJ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eACzE7B,OAAA;QAAAwB,QAAA,gBAAGxB,OAAA;UAAAwB,QAAA,EAAQ;QAAO;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,KAAC,EAACpB,cAAc,CAACsB,KAAK,IAAI,oBAAoB;MAAA;QAAAL,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,eAC9E7B,OAAA;QAAAwB,QAAA,gBACIxB,OAAA;UAAAwB,QAAA,EAAQ;QAAmB;UAAAE,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAQ,CAAC,EAAC,GAAG,EACvCpB,cAAc,CAACuB,SAAS,GACnB,IAAIC,IAAI,CAACxB,cAAc,CAACuB,SAAS,CAAC,CAACE,kBAAkB,CAAC,CAAC,GACvD,eAAe;MAAA;QAAAR,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACtB,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACH,CAAC,eAGN7B,OAAA;MAAKqB,KAAK,EAAEC,MAAM,CAACa,OAAQ;MAAAX,QAAA,gBACvBxB,OAAA;QAAAwB,QAAA,EAAI;MAAc;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAI,CAAC,EACtBtB,UAAU,CAAC6B,MAAM,GAAG,CAAC,GAClB7B,UAAU,CAAC8B,GAAG,CAAC,CAAClB,IAAI,EAAEmB,KAAK,kBACvBtC,OAAA;QAAiBqB,KAAK,EAAEC,MAAM,CAACG,IAAK;QAAAD,QAAA,gBAChCxB,OAAA;UAAAwB,QAAA,gBACIxB,OAAA;YAAAwB,QAAA,EAAQ;UAAkB;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,EAAC,GAAG,EACtC,IAAII,IAAI,CAACd,IAAI,CAACoB,aAAa,CAAC,CAACL,kBAAkB,CAAC,CAAC;QAAA;UAAAR,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACnD,CAAC,eACJ7B,OAAA;UAAAwB,QAAA,gBAAGxB,OAAA;YAAAwB,QAAA,EAAQ;UAAM;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACV,IAAI,CAACqB,IAAI;QAAA;UAAAd,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC,eAC1C7B,OAAA;UAAAwB,QAAA,gBAAGxB,OAAA;YAAAwB,QAAA,EAAQ;UAAQ;YAAAE,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAQ,CAAC,KAAC,EAACV,IAAI,CAACsB,KAAK;QAAA;UAAAf,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAI,CAAC;MAAA,GANvCS,KAAK;QAAAZ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAOV,CACR,CAAC,gBAEF7B,OAAA;QAAAwB,QAAA,EAAG;MAAkC;QAAAE,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAG,CAC3C;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACA,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd;AAAC3B,EAAA,CA3DQD,gBAAgB;EAAA,QACJJ,WAAW;AAAA;AAAA6C,EAAA,GADvBzC,gBAAgB;AA6DzB,MAAMqB,MAAM,GAAG;EACXC,SAAS,EAAE;IACPoB,OAAO,EAAE,MAAM;IACfC,eAAe,EAAE;EACrB,CAAC;EACDT,OAAO,EAAE;IACLU,YAAY,EAAE;EAClB,CAAC;EACDpB,IAAI,EAAE;IACFmB,eAAe,EAAE,MAAM;IACvBE,YAAY,EAAE,MAAM;IACpBH,OAAO,EAAE,MAAM;IACfE,YAAY,EAAE,MAAM;IACpBE,SAAS,EAAE;EACf;AACJ,CAAC;AAED,eAAe9C,gBAAgB;AAAC,IAAAyC,EAAA;AAAAM,YAAA,CAAAN,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}