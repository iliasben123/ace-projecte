{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\frontendreactsuivi\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport axios from \"axios\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientDashboard() {\n  _s();\n  const [healthData, setHealthData] = useState([]);\n  const [patientProfile, setPatientProfile] = useState({\n    name: \"John Doe\",\n    email: \"johndoe@example.com\",\n    birthDate: \"1990-01-01\"\n  });\n  const patientId = \"123\"; // Remplacez par l'ID réel du patient connecté\n\n  useEffect(() => {\n    // Récupérer les données de santé\n    axios.get(`http://localhost:8080/api/health-data/${patientId}`).then(response => {\n      setHealthData(response.data);\n    }).catch(error => {\n      console.error(\"Erreur lors de la récupération des données de santé :\", error);\n    });\n  }, [patientId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: styles.dashboard,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.card,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profil\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nom :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 30,\n          columnNumber: 20\n        }, this), \" \", patientProfile.name]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 20\n        }, this), \" \", patientProfile.email]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date de naissance :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 20\n        }, this), \" \", new Date(patientProfile.birthDate).toLocaleDateString()]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      style: styles.section,\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\xC9tats de sant\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), healthData.length > 0 ? healthData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        style: styles.card,\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date enregistr\\xE9e :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 32\n          }, this), \" \", new Date(data.date_recorded).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 32\n          }, this), \" \", data.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valeur :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 32\n          }, this), \" \", data.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 25\n      }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Aucune donn\\xE9e de sant\\xE9 disponible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 21\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"P3hnxPRlUiv1CmmtJZ1D2V4J+MI=\");\n_c = PatientDashboard;\nconst styles = {\n  dashboard: {\n    padding: \"20px\",\n    backgroundColor: \"#f9f9f9\"\n  },\n  section: {\n    marginBottom: \"30px\"\n  },\n  card: {\n    backgroundColor: \"#fff\",\n    borderRadius: \"10px\",\n    padding: \"20px\",\n    marginBottom: \"10px\",\n    boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.1)\"\n  }\n};\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useEffect","useState","axios","jsxDEV","_jsxDEV","PatientDashboard","_s","healthData","setHealthData","patientProfile","setPatientProfile","name","email","birthDate","patientId","get","then","response","data","catch","error","console","style","styles","dashboard","children","card","fileName","_jsxFileName","lineNumber","columnNumber","Date","toLocaleDateString","section","length","map","index","date_recorded","type","value","_c","padding","backgroundColor","marginBottom","borderRadius","boxShadow","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/frontendreactsuivi/src/pages/PatientDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport axios from \"axios\";\r\n\r\nfunction PatientDashboard() {\r\n    const [healthData, setHealthData] = useState([]);\r\n    const [patientProfile, setPatientProfile] = useState({\r\n        name: \"John Doe\",\r\n        email: \"johndoe@example.com\",\r\n        birthDate: \"1990-01-01\",\r\n    });\r\n\r\n    const patientId = \"123\"; // Remplacez par l'ID réel du patient connecté\r\n\r\n    useEffect(() => {\r\n        // Récupérer les données de santé\r\n        axios.get(`http://localhost:8080/api/health-data/${patientId}`)\r\n            .then(response => {\r\n                setHealthData(response.data);\r\n            })\r\n            .catch(error => {\r\n                console.error(\"Erreur lors de la récupération des données de santé :\", error);\r\n            });\r\n    }, [patientId]);\r\n\r\n    return (\r\n        <div style={styles.dashboard}>\r\n            {/* Section Profil */}\r\n            <div style={styles.card}>\r\n                <h2>Profil</h2>\r\n                <p><strong>Nom :</strong> {patientProfile.name}</p>\r\n                <p><strong>Email :</strong> {patientProfile.email}</p>\r\n                <p><strong>Date de naissance :</strong> {new Date(patientProfile.birthDate).toLocaleDateString()}</p>\r\n            </div>\r\n\r\n            {/* Section États de santé */}\r\n            <div style={styles.section}>\r\n                <h2>États de santé</h2>\r\n                {healthData.length > 0 ? (\r\n                    healthData.map((data, index) => (\r\n                        <div key={index} style={styles.card}>\r\n                            <p><strong>Date enregistrée :</strong> {new Date(data.date_recorded).toLocaleDateString()}</p>\r\n                            <p><strong>Type :</strong> {data.type}</p>\r\n                            <p><strong>Valeur :</strong> {data.value}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    <p>Aucune donnée de santé disponible.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst styles = {\r\n    dashboard: {\r\n        padding: \"20px\",\r\n        backgroundColor: \"#f9f9f9\",\r\n    },\r\n    section: {\r\n        marginBottom: \"30px\",\r\n    },\r\n    card: {\r\n        backgroundColor: \"#fff\",\r\n        borderRadius: \"10px\",\r\n        padding: \"20px\",\r\n        marginBottom: \"10px\",\r\n        boxShadow: \"0 4px 10px rgba(0, 0, 0, 0.1)\",\r\n    },\r\n};\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}