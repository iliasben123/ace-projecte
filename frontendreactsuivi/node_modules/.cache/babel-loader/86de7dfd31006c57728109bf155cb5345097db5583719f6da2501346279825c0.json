{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\hp\\\\Desktop\\\\frontendreactsuivi\\\\src\\\\pages\\\\PatientDashboard.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\nimport axios from \"axios\";\nimport \"./PatientDashboard.css\"; // Add a simple custom CSS file\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PatientDashboard() {\n  _s();\n  var _location$state, _location$state2, _location$state2$pati;\n  const location = useLocation();\n  const [healthData, setHealthData] = useState([]);\n  const [patientProfile] = useState(((_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.patientProfile) || {});\n  const [loading, setLoading] = useState(false);\n  const [error, setError] = useState(\"\");\n  const patientId = ((_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : (_location$state2$pati = _location$state2.patientProfile) === null || _location$state2$pati === void 0 ? void 0 : _location$state2$pati.id) || \"123\";\n  useEffect(() => {\n    if (!patientId) {\n      setError(\"Aucun ID patient trouvé !\");\n      return;\n    }\n    setLoading(true);\n    setError(\"\");\n    axios.get(`http://localhost:8080/api/health-data/${patientId}`).then(response => {\n      setHealthData(response.data);\n      setLoading(false);\n    }).catch(() => {\n      setError(\"Erreur lors de la récupération des données de santé.\");\n      setLoading(false);\n    });\n  }, [patientId]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboard\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"profile-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Profil du Patient\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Nom :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 20\n        }, this), \" \", patientProfile.name || \"Nom indisponible\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Email :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 20\n        }, this), \" \", patientProfile.email || \"Email indisponible\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n          children: \"Date de naissance :\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 21\n        }, this), \" \", patientProfile.birthDate ? new Date(patientProfile.birthDate).toLocaleDateString() : \"Non spécifiée\"]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"health-data-section\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"Rapports de Sant\\xE9\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 17\n      }, this), loading && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"loader\",\n        children: \"Chargement...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 29\n      }, this), error && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"error-message\",\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 27\n      }, this), healthData.length > 0 ? healthData.map((data, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"health-data-card\",\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Date enregistr\\xE9e :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 33\n          }, this), \" \", new Date(data.date_recorded).toLocaleDateString()]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Type :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 32\n          }, this), \" \", data.type]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 29\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [/*#__PURE__*/_jsxDEV(\"strong\", {\n            children: \"Valeur :\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 32\n          }, this), \" \", data.value]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 29\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 25\n      }, this)) : !loading && /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"no-data-message\",\n        children: \"Aucune donn\\xE9e de sant\\xE9 disponible.\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 33\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 9\n  }, this);\n}\n_s(PatientDashboard, \"tBEIdAKiUvZC0mFENJq0yAejh9g=\", false, function () {\n  return [useLocation];\n});\n_c = PatientDashboard;\nexport default PatientDashboard;\nvar _c;\n$RefreshReg$(_c, \"PatientDashboard\");","map":{"version":3,"names":["React","useEffect","useState","useLocation","axios","jsxDEV","_jsxDEV","PatientDashboard","_s","_location$state","_location$state2","_location$state2$pati","location","healthData","setHealthData","patientProfile","state","loading","setLoading","error","setError","patientId","id","get","then","response","data","catch","className","children","fileName","_jsxFileName","lineNumber","columnNumber","name","email","birthDate","Date","toLocaleDateString","length","map","index","date_recorded","type","value","_c","$RefreshReg$"],"sources":["C:/Users/hp/Desktop/frontendreactsuivi/src/pages/PatientDashboard.js"],"sourcesContent":["import React, { useEffect, useState } from \"react\";\r\nimport { useLocation } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport \"./PatientDashboard.css\"; // Add a simple custom CSS file\r\n\r\nfunction PatientDashboard() {\r\n    const location = useLocation();\r\n    const [healthData, setHealthData] = useState([]);\r\n    const [patientProfile] = useState(location.state?.patientProfile || {});\r\n    const [loading, setLoading] = useState(false);\r\n    const [error, setError] = useState(\"\");\r\n\r\n    const patientId = location.state?.patientProfile?.id || \"123\";\r\n\r\n    useEffect(() => {\r\n        if (!patientId) {\r\n            setError(\"Aucun ID patient trouvé !\");\r\n            return;\r\n        }\r\n\r\n        setLoading(true);\r\n        setError(\"\");\r\n\r\n        axios\r\n            .get(`http://localhost:8080/api/health-data/${patientId}`)\r\n            .then((response) => {\r\n                setHealthData(response.data);\r\n                setLoading(false);\r\n            })\r\n            .catch(() => {\r\n                setError(\"Erreur lors de la récupération des données de santé.\");\r\n                setLoading(false);\r\n            });\r\n    }, [patientId]);\r\n\r\n    return (\r\n        <div className=\"dashboard\">\r\n            <div className=\"profile-section\">\r\n                <h2>Profil du Patient</h2>\r\n                <p><strong>Nom :</strong> {patientProfile.name || \"Nom indisponible\"}</p>\r\n                <p><strong>Email :</strong> {patientProfile.email || \"Email indisponible\"}</p>\r\n                <p>\r\n                    <strong>Date de naissance :</strong>{\" \"}\r\n                    {patientProfile.birthDate\r\n                        ? new Date(patientProfile.birthDate).toLocaleDateString()\r\n                        : \"Non spécifiée\"}\r\n                </p>\r\n            </div>\r\n\r\n            <div className=\"health-data-section\">\r\n                <h2>Rapports de Santé</h2>\r\n                {loading && <div className=\"loader\">Chargement...</div>}\r\n                {error && <div className=\"error-message\">{error}</div>}\r\n                {healthData.length > 0 ? (\r\n                    healthData.map((data, index) => (\r\n                        <div key={index} className=\"health-data-card\">\r\n                            <p>\r\n                                <strong>Date enregistrée :</strong>{\" \"}\r\n                                {new Date(data.date_recorded).toLocaleDateString()}\r\n                            </p>\r\n                            <p><strong>Type :</strong> {data.type}</p>\r\n                            <p><strong>Valeur :</strong> {data.value}</p>\r\n                        </div>\r\n                    ))\r\n                ) : (\r\n                    !loading && <p className=\"no-data-message\">Aucune donnée de santé disponible.</p>\r\n                )}\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default PatientDashboard;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}